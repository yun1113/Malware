from __future__ import absolute_import

from celery import shared_task

from subprocess import Popen, PIPE
from malwaredb.virus_api import get_api
from docker import Client
import os
import time


@shared_task
def temuWork(hash):

    # call virustotal API
    get_api(hash)

    # start a docker container
    p = Popen(['docker run -v /home/ants/Malware/VMimage:/home/root/VMimage -v '
               '/home/ants/Malware/project/vmp/media:/home/root/malware '
               '-v /home/ants/Malware/automation:/home/root/automation '
               '-v /home/ants/Malware/project/vmp/malwaredb:/home/root/malwaredb '
               '--privileged -i 7568fc0fa776  /bin/bash'], stdout=PIPE, stdin=PIPE, shell=True)
    # send command
    result = p.communicate(input=bytes('python /home/root/automation/script/winmalware.py '
                                       '/home/root/malware/'+str(hash)+' /home/root/automation/output'))[0]

    hooklog_to_html(hash)
    return " Hash " + hash + " ResultCode " + result.decode()
    # return


@shared_task
def profiling(hash):
    print("Step1. Create Client")
    cli = Client(base_url='unix://var/run/docker.sock')

    print("Step2. Create container")
    container = cli.create_container(image='7568fc0fa776', stdin_open=True, tty=True,
                                     command='python /home/root/automation/script/winmalware.py '
                                             '/home/root/malware/' + hash + ' /home/root/automation/output/',
                                     volumes=['/home/root/VMimage', '/home/root/malware', '/home/root/automation'],
                                     host_config=cli.create_host_config(privileged=True, binds=[
                                         '/home/profile/website/VMimage:/home/root/VMimage',
                                         '/home/profile/website/vmp/vmp/media:/home/root/malware',
                                         '/home/profile/website/automation:/home/root/automation',]))

    print("Step3. Start Container")
    cli.start(container)

    print("Step4. After 15 mins...")
    time.sleep(900) # 15 min
    # print(cli.logs(container))

    while len(cli.containers(filters={'id': container['Id']})) != 0:
        print("Step5. After more 1 min...")
        time.sleep(60)

    print("Step6. Excute Log")
    print(cli.logs(container))

    print("Step7. Remove Container")
    cli.remove_container(container['Id'])


def hooklog_to_html(hash):
    # sleep(900)
    output_path = "/home/hcy/Malware/automation/output"
    for filename in os.listdir(output_path):
        if hash in filename:
            if ".hooklog" in filename:
                print("hooklog_to_html: " + filename)
                Popen (["python","/home/hcy/Malware/automation/script/hook-html.py", filename])

# for dirpath,dirname,filename in os.walk(output_path):
# 	for fn in filename:
# 		if "malware" in fn:
# 			call(["mv", os.path.join(dirpath, fn), os.path.join(dirpath, hash + "_" + fn.split("_")[1])])
# 			if ".hooklog" in fn:
# 				Popen (["python","/home/profile/website/automation/script/hook-html.py", hash + "_" + fn.split("_")[1]])
# 		elif hash in fn:
# 			if ".hooklog" in fn:
# 				Popen (["python","/home/profile/website/automation/script/hook-html.py", hash + "_" + fn.split("_")[1]])
