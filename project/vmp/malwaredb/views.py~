
#-*- coding: utf-8 -*-
from django.shortcuts import render
from django.shortcuts import render_to_response

# Create your views here.
from malwaredb.models import Malware, Upload
from malwaredb.forms import MalwareUploadFileForm, insertDB

from django.db.models import Q

from django.template import RequestContext
from datetime import datetime
import hashlib
import os
from django.conf import settings

from malwaredb.tasks import add, temuWork, test

# HTTP Error 404
def bad_request(request):
        response = render_to_response('404.html', context_instance=RequestContext(request))
        response.status_code = 404
        return response

# HTTP Error 500
def server_error(request):
        response = render_to_response('500.html', context_instance=RequestContext(request))
        response.status_code = 500
        return response


def malwarelist(request):
        #malwares = Malware.objects.all()
        searchText = request.POST['searchText']
        malwares = Malware.objects.filter(Q(hash__contains=searchText) | Q(virustotalurl__contains=searchText) | Q(firstseen__month__contains=searchText)).order_by('submissiondate')[:1]
        return render_to_response('malwarelist.html', locals())

def malwareupload(request):
        if request.method == 'POST':
                form = MalwareUploadFileForm(request.POST, request.FILES)
                if form.is_valid():
                        f = request.FILES['file']
                        hash = hash_uploaded_file(f)

                        # Save file
                        success = handle_upload_file(f, hash)

                        # Add to Upload model
                        u = handle_file(f)  
                        return render_to_response('malware.html', RequestContext(request, locals()))
        else:
                form = MalwareUploadFileForm()

        return render(request, 'malware.html', {'form': form})

def loadpage(request,hash):
	if hash != '':
		return render(request,str(hash)+'.html',locals())
	else:
		return render(request,'404.html')

def loadvt(request,hash):
	if hash != '':
		return render(request,str(hash)+'_json.html',locals())
	else:
		return render(request,'404.html')

def malwareuploadFromLocal(request):
    if request.method == 'POST':
        f = request.FILES['uploadedfile']
        handle_file(f)
        return render(request, 'malware.html')
    else:
        form = MalwareUploadFileForm()
    return render(request, 'malware.html')

def handle_file(f):
    hash = hash_uploaded_file(f)

    # Save file
    success = handle_upload_file(f, hash)

   # insertDB(hash,datetime.now(),datetime.now(),0.88,hash,hash)

    # Add to Upload model
    u = Upload()
    u.name = f.name
    u.size = f.size
    u.hash = hash
    u.submissiondate = datetime.now()
    u.save()

    #insert Malware data
    #insertDB(hash,datetime.now(),datetime.now(),0.88,hash,hash)
    m = Malware()
    m.hash = hash
    m.firstseen = datetime.now()
    m.submissiondate = datetime.now()
    m.detectionrate = 0.8
    m.virustotalurl = hash
    m.vmp = hash
    m.save()
    #malDB = InsertDB()
    #malDB.insertMalware(hash,datetime.now(),0.8,hash,hash)

    # Celery task
    temuWork.delay(hash)
    #add.delay(5,4)
    return u

def hash_uploaded_file(f):
        hash = hashlib.sha256()
        for chunk in f.chunks():
                hash.update(chunk)
        return hash.hexdigest()


def handle_upload_file(f, hash):
        file_path = os.path.join(settings.MEDIA_ROOT, hash)
        if not os.path.exists(file_path):
                with open(file_path, 'wb+') as destination:
                        for chunk in f.chunks():
                                destination.write(chunk)
                return True
        else:
                return False

