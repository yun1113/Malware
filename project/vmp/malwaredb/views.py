#-*- coding: utf-8 -*-
from django.shortcuts import render
from django.shortcuts import render_to_response

# Create your views here.
from malwaredb.models import Malware, Upload
from malwaredb.forms import MalwareUploadFileForm, insertDB

from django.db.models import Q

from django.template import RequestContext
from datetime import datetime
import hashlib
import os
from django.conf import settings

from malwaredb.tasks import temuWork, profiling

def malwarelist(request):
    # malwares = Malware.objects.all()
    searchText = request.GET['searchText']
    malwares = Malware.objects.filter(Q(hash__contains=searchText) | Q(virustotalurl__contains=searchText) | Q(firstseen__month__contains=searchText)).order_by('submissiondate')[:1]
    return render_to_response('malwarelist.html', locals())

def malwareupload(request):
    if request.method == 'POST':
        form = MalwareUploadFileForm(request.POST, request.FILES)
        if form.is_valid():
            f = request.FILES['file']
            # Add to Upload model
            hash = hash_uploaded_file(f)

            # Save file
            success = handle_upload_file(f, hash)

            u = handle_file(f, hash)  
            return render(request, 'malware.html', locals())
            # return render_to_response('malware.html', RequestContext(request, locals()))
    else:
        form = MalwareUploadFileForm()

    return render(request, 'malware.html', {'form': form})

def loadpage(request,hash):
	if hash != '':
		return render(request,str(hash)+'.html',locals())
	else:
		return render(request,'404.html')

def loadvt(request,hash):
	if hash != '':
		return render(request,str(hash)+'_json.html',locals())
	else:
		return render(request,'404.html')

def malwareuploadFromLocal(request):
    if request.method == 'POST':
        f = request.FILES['uploadedfile']
        handle_file(f)
        return render(request, 'malware.html')
    else:
        form = MalwareUploadFileForm()
    return render(request, 'malware.html')

def handle_file(f, hash):
    
    # Add to Upload model
    u = Upload()
    u.name = f.name
    u.size = f.size
    u.hash = hash
    u.submissiondate = datetime.now()
    u.save()

    # if malware not exist in db
    if len(Malware.objects.filter(hash=hash)) == 0:
        # insert Malware data
        m = Malware()
        m.hash = hash
        m.firstseen = datetime.now()
        m.submissiondate = datetime.now()
        m.detectionrate = 0.8
        m.virustotalurl = hash
        m.vmp = hash
        m.save()

        # Celery task
    temuWork.delay(hash)
        # profiling.delay(hash)

    return u

def hash_uploaded_file(f):
    ''' Input file then return file's hash value
    Args:
        f: a file upload by user 
    Return:
        hash: file's hash value
    '''
    hash = hashlib.sha256()
    for chunk in f.chunks():
        hash.update(chunk)
    return hash.hexdigest()

def handle_upload_file(f, hash):
    ''' Handle upload file from user, if not in media directory, save it
    Args:
        f: a file upload by user 
        hash: upload file's hash value
    Return:
        boolean: whether saving is success
    '''
    file_path = os.path.join(settings.MEDIA_ROOT, hash)
    if not os.path.exists(file_path):
        with open(file_path, 'wb+') as destination:
            for chunk in f.chunks():
                destination.write(chunk)
        return True
    else:
        return False

# HTTP Error 404
def bad_request(request):
    response = render_to_response('404.html', context_instance=RequestContext(request))
    response.status_code = 404
    return response

# HTTP Error 500
def server_error(request):
    response = render_to_response('500.html', context_instance=RequestContext(request))
    response.status_code = 500
    return response
