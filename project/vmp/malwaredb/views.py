#-*- coding: utf-8 -*-
from django.shortcuts import render, render_to_response, redirect
from django.db.models import Q
from django.template import RequestContext
from django.conf import settings
from django.views.static import serve
from django.core.mail import EmailMessage

from malwaredb.tasks import temuWork, profiling
from malwaredb.models import Malware, Upload, VirusTotalInfo
from malwaredb.forms import MalwareUploadFileForm, insertDB, ContactForm
from malwaredb.virus_api import get_api

from datetime import datetime

import hashlib
import os


def malware_upload(request):
    if request.method == 'POST':
        form = MalwareUploadFileForm(request.POST, request.FILES)
        if form.is_valid():
            f = request.FILES['file']

            # Add to Upload model
            hash = hash_uploaded_file(f)

            # Save file
            success = handle_upload_file(f, hash)

            u = handle_file(f, hash)  
            return render(request, 'malware.html', locals())
            # return render_to_response('malware.html', RequestContext(request, locals()))
    else:
        form = MalwareUploadFileForm()
    return render(request, 'malware.html', {'form': form})


def malware_search(request):
    if request.GET['keywordSearchText'] != "":
        searchText = request.GET['keywordSearchText']
        keyword = True
    else:  # request.GET['hashSearchText']
        searchText = request.GET['hashSearchText']
    vendor_list = VirusTotalInfo.objects.filter(Q(label__contains=searchText) |
                                                Q(md5=searchText)).order_by('vendor')
    return render_to_response('malware_search.html', locals())


def malware_download(request):
    file_dir= '/home/hcy/Malware/project/vmp/malwaredb/templates/hooklog/'
    malware = request.GET['malware']
    malwares = Malware.objects.filter(hash=malware)

    filepath = file_dir + malwares[0].hash + ".html"

    return serve(request, os.path.basename(filepath), os.path.dirname(filepath))


def malware_detail(request):
    malware_name = request.GET['malware']
    malware = Malware.objects.filter(hash=malware_name).first()
    print(locals())
    return render_to_response('malware_detail.html', locals())


def load_hooklog_page(request, hash_value):
    if hash != '':
        return render(request, "hooklog/" + str(hash_value)+'.html', locals())
    else:
        return render(request, '404.html')


def contact(request):
    form_class = ContactForm

    if request.method == 'POST':
        form = form_class(data=request.POST)

        if form.is_valid():
            contact_name = request.POST.get('name', '')
            contact_email = request.POST.get('email', '')
            form_title = request.POST.get('title', '')
            form_content = request.POST.get('content', '')

            content = "Name: {0}\n" \
                      "Email: {1}\n" \
                      "Ttile: {2}\n" \
                      "Content: {3}".format(contact_name, contact_email, form_title, form_content)

            email = EmailMessage(
                "New contact form submission",
                content,
                "Your website" + '',
                ['yunyun1113c@gmail.com'],
                headers={'Reply-To': contact_email}
            )
            email.send()
            return redirect('contact')
    return render(request, 'contact.html', {
        'form': form_class,
    })


def loadvt(request, hash):
    if hash != '':
        return render(request, str(hash)+'_json.html',locals())
    else:
        return render(request, '404.html')


def malwareuploadFromLocal(request):
    if request.method == 'POST':
        f = request.FILES['uploadedfile']
        handle_file(f)
        return render(request, 'malware.html')
    else:
        form = MalwareUploadFileForm()
    return render(request, 'malware.html')


def handle_file(f, hash):
    
    # Add to Upload model
    u = Upload()
    u.name = f.name
    u.size = f.size
    u.hash = hash
    u.submissiondate = datetime.now()
    u.save()

    # if malware not exist in db
    if len(Malware.objects.filter(hash=hash)) == 0:
        # insert Malware data
        m = Malware()
        m.hash = hash
        m.submissiondate = datetime.now()
        m.detectionrate = 0.8
        m.virustotalurl = hash
        m.vmp = hash
        m.save()
        # get_api(hash)

    # Celery task
    # temuWork.delay(hash)
    profiling.delay(hash)

    return u


def hash_uploaded_file(f):
    ''' Input file then return file's hash value
    Args:
        f: a file upload by user 
    Return:
        hash: file's hash value
    '''
    hash = hashlib.sha256()
    for chunk in f.chunks():
        hash.update(chunk)
    return hash.hexdigest()


def handle_upload_file(f, hash):
    ''' Handle upload file from user, if not in media directory, save it
    Args:
        f: a file upload by user 
        hash: upload file's hash value
    Return:
        boolean: whether saving is success
    '''
    file_path = os.path.join(settings.MEDIA_ROOT, hash)
    if not os.path.exists(file_path):
        with open(file_path, 'wb+') as destination:
            for chunk in f.chunks():
                destination.write(chunk)
        return True
    else:
        return False


# HTTP Error 404
def bad_request(request):
    response = render_to_response('404.html', context_instance=RequestContext(request))
    response.status_code = 404
    return response


# HTTP Error 500
def server_error(request):
    response = render_to_response('500.html', context_instance=RequestContext(request))
    response.status_code = 500
    return response
