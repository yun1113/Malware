from __future__ import absolute_import

from celery import shared_task

from time import sleep
from subprocess import Popen, PIPE
from malwaredb.virus_api import getApi
from django.core.cache import cache


port = 50000
@shared_task
def add(x, y):
	sleep(5)
	return x + y

@shared_task
def test():
	p = Popen(['docker run -v /mnt/container_storage/webapp/VMimage:/home/root/VMimage -v /mnt/container_storage/webapp/vmp/media:/home/root/malware -v /mnt/container_storage/webapp/automation:/home/root/automation -v /mnt/container_storage/webapp/vmp/malwaredb/:/home/root/malwaredb --privileged -i ed9a3dbb69bf  /bin/bash'], stdout=PIPE, stdin=PIPE, shell=True)
	result = p.communicate(input=bytes(('ls'),'utf8'))[0]
	return result.decode()

@shared_task
def temuWork(hash):
	port = cache.get('port', 50000)
	if port > 65000:
		port = 50000
        # start a docker container

	#p = Popen(['docker run -v /mnt/container_storage/webapp/VMimage:/home/root/VMimage -v /mnt/container_storage/webapp/vmp/media:/home/root/malware -v /mnt/container_storage/webapp/automation:/home/root/automation -v /mnt/container_storage/webapp/vmp/malwaredb/:/home/root/malwaredb -p 4444' + str(port)+ ' --privileged -i ed9a3dbb69bf  /bin/bash'], stdout=PIPE, stdin=PIPE, shell=True)
	p = Popen(['docker run -v /mnt/container_storage/webapp/VMimage:/home/root/VMimage -v /mnt/container_storage/webapp/vmp/media:/home/root/malware -v /mnt/container_storage/webapp/automation:/home/root/automation -v /mnt/container_storage/webapp/vmp/malwaredb/:/home/root/malwaredb --privileged -i ed9a3dbb69bf  /bin/bash'], stdout=PIPE, stdin=PIPE, shell=True)
	port += 1
	cache.set('port', port)

	result = p.communicate(input=bytes(('python /home/root/automation/script/winmalware.py /home/root/malware/'+hash+' /home/root/automation/output'),'utf8'))[0]

        # call virustotal API
	getApi(hash)
	Popen (["python /usr/src/app/vmp/malwaredb/parser/parser-json-xml.py " + hash] ,shell=True)

	return "Port " + str(port) + " Hash " + hash + " ResultCode " + result.decode()
